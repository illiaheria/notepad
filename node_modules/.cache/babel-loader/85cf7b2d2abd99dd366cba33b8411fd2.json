{"ast":null,"code":"import { TEST_REQUESTED, TEST_RECEIVED, TEST_FAILED } from './actionTypes';\nexport const InitialMainReducer = {\n  test: ''\n}; // TODO describe all anyies\n\nexport const main = (state = InitialMainReducer, action) => {\n  switch (action.type) {\n    case 'ADD':\n      return { ...state,\n        add: 5\n      };\n\n    case TEST_REQUESTED:\n      return { ...state,\n        status: 'waiting'\n      };\n\n    case TEST_RECEIVED:\n      return { ...state,\n        data: action.payload,\n        status: ''\n      };\n\n    case TEST_FAILED:\n      return { ...state,\n        error: action.payload,\n        status: 'failed'\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/user/notepad/src/pages/main/main.reducer.tsx"],"names":["TEST_REQUESTED","TEST_RECEIVED","TEST_FAILED","InitialMainReducer","test","main","state","action","type","add","status","data","payload","error"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,aAAzB,EAAwCC,WAAxC,QAA2D,eAA3D;AAQA,OAAO,MAAMC,kBAAuB,GAAG;AACrCC,EAAAA,IAAI,EAAE;AAD+B,CAAhC,C,CAGP;;AACA,OAAO,MAAMC,IAA0C,GAAG,CACxDC,KAAmB,GAAGH,kBADkC,EAExDI,MAFwD,KAGrD;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AACE,aAAO,EAAE,GAAGF,KAAL;AAAYG,QAAAA,GAAG,EAAE;AAAjB,OAAP;;AACF,SAAKT,cAAL;AACE,aAAO,EAAE,GAAGM,KAAL;AAAYI,QAAAA,MAAM,EAAE;AAApB,OAAP;;AACF,SAAKT,aAAL;AACE,aAAO,EAAE,GAAGK,KAAL;AAAYK,QAAAA,IAAI,EAAEJ,MAAM,CAACK,OAAzB;AAAkCF,QAAAA,MAAM,EAAE;AAA1C,OAAP;;AACF,SAAKR,WAAL;AACE,aAAO,EAAE,GAAGI,KAAL;AAAYO,QAAAA,KAAK,EAAEN,MAAM,CAACK,OAA1B;AAAmCF,QAAAA,MAAM,EAAE;AAA3C,OAAP;;AACF;AACE,aAAOJ,KAAP;AAVJ;AAYD,CAhBM","sourcesContent":["import { TEST_REQUESTED, TEST_RECEIVED, TEST_FAILED } from './actionTypes';\nimport { IAction } from '../../models/actionModel';\n\ninterface IMainReducer {\n  test: string;\n  status: string;\n}\n\nexport const InitialMainReducer: any = {\n  test: '',\n};\n// TODO describe all anyies\nexport const main: (state: any, action: IAction) => any = (\n  state: IMainReducer = InitialMainReducer,\n  action: IAction,\n) => {\n  switch (action.type) {\n    case 'ADD':\n      return { ...state, add: 5 };\n    case TEST_REQUESTED:\n      return { ...state, status: 'waiting' };\n    case TEST_RECEIVED:\n      return { ...state, data: action.payload, status: '' };\n    case TEST_FAILED:\n      return { ...state, error: action.payload, status: 'failed' };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}